@model coursework.Models.Login

@{
    ViewBag.Title = "Вход в систему";
}

<h2>Вход в систему</h2>

@{
    try
    {
        //если контроллер отправил сообщение (то есть оно не пустое)
        if (TempData["msg"]!=null)
        {
            //то выводим это красным цветом
            <script>Swal.fire({
                    icon: "error",
                    title: "Ошибка!",
                    text: "Неверные логин или пароль!"
                });</script>
            @*<label style="color:red">@TempData["msg"]</label>*@
        }
    }
    catch (Exception)
    {

        throw;
    }
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Войти" class="btn btn-info" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
